//Fonts
@import url('https://fonts.googleapis.com/css2?family=Anonymous+Pro:ital,wght@0,400;0,700;1,400;1,700&family=Geologica:wght@100..900&display=swap');

/*** MIXINS ***/
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin transform($transforms) {
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
  transform: $transforms;
  position: relative; // Ensure the positioning context
}

@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}

@mixin animation($animation...) {
       -o-animation: $animation;
     -moz-animation: $animation;
  -webkit-animation: $animation;
          animation: $animation;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}


//Color
$black:#fff;
$white:#111;
$lightgray:#f0f0f0;

body{
  background:$lightgray;
  font-family: "Anonymous Pro", serif;
  font-family: "Geologica", sans-serif;
  padding:3vw 3vw;
}

header{
  h1{
    padding: 0 2vw;
  }
  p{
    font-weight: 200;
    padding: 0 2vw;
  }
}

.card-wrapper{
  display:flex;
  flex-wrap:wrap;
  max-width:1600px;
  margin:0 auto;
}


.card {
display: grid;
grid-template-columns: repeat(2, 1fr);
grid-template-rows: repeat(7, 1fr);
grid-column-gap: 0px;
grid-row-gap: 0px;
height:60vw;
position:relative;
margin:2vw;
  flex:30%;
   overflow:hidden;
  box-shadow: 0.2vw 0.2vw 0.3vw lightgray;
  font-size:1.3vw;
  font-family: "Anonymous Pro", serif;
  background:$black;
  color:$white;

h2 { 
  grid-area: 1 / 1 / 2 / 5; 
  padding-top:5vw;
  z-index:1;
  margin:0;
  padding:5vw 35px 0 1.5vw;
  border-bottom:0.5px dashed $white;
  background:white;
  font-family: "Geologica", sans-serif;
  text-transform: uppercase;
  font-size:2.5vw;
  width:calc(100% - 33px);
  background:$black;
  color:$white;
}

p { 
grid-area: 2 / 1 / 3 / 5; 
  margin:0;
  padding:0.5vw 5vw 1vw 1.5vw;
    border-bottom:0.5px dashed $white;
  font-family: "Geologica", sans-serif;
  font-weight:200;
}
.tabs { 
    grid-area: 3 / 1 / 7 / 5; 
    overflow:scroll;
height:120%;
  padding:0 3vw 1vw 0;
  position:relative;
  overscroll-behavior: none;
  .tab-content{
    padding-right:3vw;
      table{
     padding:0;
    margin: 30px 0.5vw 30px 1.5vw; 
        
  }//table
  }//.tab-content
    input[type="radio"] {
    opacity:0;
      width:0;
      height:0;
      position: absolute;
  }
  .tab-label{
    border-bottom:0.5px dashed $white;
    padding:0.9vw 0 1vw 1.5vw;
    margin-top:0;
    position:sticky;
   top:0;
    background:$black;
    z-index:2;
    label{
      margin:0 2vw 0 0;
      position: relative;
      &:before{
        content:"";
        width:1.1vw;
        height:1.1vw;
        display:inline-block;
        margin-right:0.7vw;
        margin-bottom: -0.2vw;
        border:1px dashed $white;
      }//&:before
      &:hover{
             font-weight:bold;
        &:before{
          border:1px solid $white;
        }
      }
    }//label
  }//.tabs-label
  // Target indices 0, 1, 2, etc.
@for $i from 0 through 5 {
  #tab1-#{$i}:checked ~ .tab-label label[for="tab1-#{$i}"],
  #tab2-#{$i}:checked ~ .tab-label label[for="tab2-#{$i}"],
  #tab3-#{$i}:checked ~ .tab-label label[for="tab3-#{$i}"] {
    font-weight:bold;
            &:before{
              border:1.5px solid $white;
                 background: linear-gradient(
    -45deg,
    transparent,
    transparent 42%,
    $white 42%,
    $white 57%,
    transparent 57%,
    transparent 100%
  );
        }
      &:hover{
        &:before{
          background:$lightgray;
                           background: linear-gradient(
    -45deg,
    #f0f0f0,
    #f0f0f0 45%,
    $white 45%,
    $white 55%,
    #f0f0f0 55%,
    #f0f0f0 100%
  );
        }
      }
  }
}//@for $i from 0 through 5 
}//.tabs

/* tav navigation styling */
.tabs > input:nth-child(1):checked ~ .tab-content{  
/* styling content of tab 3 */
  display: block;
  table{
    position: relative;
    width: 100%;
    height: 100%;
    tbody{
      position: relative;
  display: block;
  width: 100%;
  height: 100%;
    }
     tr{
      opacity: 0;
       max-width:50%;

      // Ensure the first child circle is visible from the start
      &:nth-child(2){
        opacity: 1;
        animation: none; // Disable animation for the first child
        .year{
          top:-1vw;
           &:before {
   background:$black;
        }
        }
        .extent-bar{
          background:$white;
          z-index:1;
          position: absolute;
          left: 50%;
          span{
          }//span
        }//.extent-bar
      }//&:nth-child(2)
      // Last child circle is visible from the start
      &:last-child {
       opacity: 1;
      }
   
      .year {
        position: absolute;
        left: 90%;
        top:1vw;
        @include transform(translate(-50%, 0));
        font-size: 1.1vw;
        color:$white;
        z-index:1;
        font-family: "Geologica", sans-serif;
        &:before {
   content: '';
  position: absolute;
          width:1vw;
          height:1vw;
          border:1px solid $white;
          margin-left:-2vw;
          background:$black;
        }
      }//.year
      .extent-bar {
      position: absolute;
      left: 100%;
      @include transform(translate(-50%, 0));
      border: 1px solid $white;
      background:$black;
      width:20vw;
      padding-bottom:2vw;
      top:calc(var(--value) * 1.5);
       span{
            position:absolute;
             bottom: 0;
            left: 50%;
         opacity:0;
        }
    }//.extent-bar 
    } //tr
  }//table

}//.tabs > input:nth-child(1):checked ~ .tab-content

$numYears: 64; // Total number of rows/children
$animation-duration: 1s; // Time each child is visible

.tabs > input:nth-child(1):checked ~ .tab-content {
  display: block;

  table {
    tr {
      opacity: 0; // Default state: hidden
      transition: opacity $animation-duration ease-out; // Smooth transition on hover

                // Ensure the first child is visible from the start
            &:nth-child(1) {
              display:none;
      }
      // Ensure the first child is visible from the start
      &:nth-child(2) {
        opacity: 1;
        animation: none; // Disable animation for the first child
      }
      // Ensure the last child is visible from the start
      &:last-child {
        opacity: 1;
      }

      // Apply animations for other children on hover of the table
      @for $i from 3 through $numYears {
        &:nth-child(#{$i}) {
          animation: none; // No animation initially
        }
      }
    }

    // Trigger the animation only when hovering over the table
    &:hover {
      tr {
        opacity: 0; // On hover, make all rows visible

        // Generate animations for the remaining children with staggered delays
        @for $i from 2 through $numYears {
          &:nth-child(#{$i}) {
            animation: fadeInOut #{$animation-duration} ease-out #{0.45s * ($i - 1)};
          }
        }

        // Apply fadeIn animation to the last child
        &:last-child {
          animation: fadeIn #{$animation-duration} ease-in-out #{0.45s * ($numYears - 1)};
          animation-fill-mode: both; // Keeps the last keyframe styles after animation ends
        }
      }
    }
  }
}

// Keyframes for fadeInOut animation
@keyframes fadeInOut {
  0%, 100% {
    opacity: 0;
  }
  50% {
    opacity: 1; // Fully visible at the midpoint
  }
}

// Keyframes for fadeIn animation
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}  

.tabs > input:nth-child(2):checked ~ .tab-content  { /* styling content of tab 2 */
  display: block;
  /* Styling the extent column as bars */
.extent-bar {
  position: relative;
  height: 50vh;
  width: 100vw;  
}

/* Bar styling using ::before */
.extent-bar::before {
   content: '';
  position: absolute;
    height:90%;
    bottom: 0;
  left:5px;
    width: calc(100% + 15px);
  background-color: $white;
   clip-path: circle(3px at calc(100% - 16px) calc(100% - var(--value) + 5px));
}

.extent-bar:hover::before{
       clip-path: circle(5px at calc(100% - 16px) calc(100% - var(--value) + 5px));
}

.extent-bar::after {
    content: '';
  position: absolute;
  bottom: 0;
  width:calc(100% + 3px) ;
  background-color: $white;
  height: calc(90% - 5px);
  clip-path: polygon(
    0 calc(100% - var(--previous-value)), 
    100% calc(100% - var(--value)), 
    100% calc(100% - var(--value) + 1px), 
    0 calc(100% - var(--previous-value) + 1px));
}
.extent-bar:hover::after{
  clip-path: polygon(
    0 calc(100% - var(--previous-value)), 
    100% calc(100% - var(--value)), 
    100% calc(100% - var(--value) + 2px), 
    0 calc(100% - var(--previous-value) + 2px));
}

/* Style the extent value text */
.extent-bar span {
  position: absolute;
  top: calc(100% - var(--value));
  right:-0.8vw;
  font-size: 12px;
  opacity:0;
}

.extent-bar:hover span{
  opacity:1;
}


table{
  display:flex;
  border-left:1px solid $white;
  border-bottom:1px solid $white;
}

td.year{ /* hide years */
  position: absolute;
  display:none;
  margin-top: 52vh;
}
td.year:before{
     content: '';
  position: absolute;
  width:1px;
  height:5px;
  background:$white;
  margin-top:-0.4vw;
  margin-left:1vw;
}

tr:nth-of-type(5n + 2) td.year { /* show 2nd and every 5 after years*/
  display:block;
}

th:first-of-type{ //position of Year
  position: absolute;
  right: 40px;
  margin-top: 55vh;
}

th:last-of-type{ //position of y-axis label
  position: absolute;
  margin-top: -21px;
  margin-left: -2px;
}


}//.tabs > input:nth-child(2):checked ~ .tab-content

.tabs > input:nth-child(3):checked ~ .tab-content  { 
  table {
  width: 95%;
  max-width:500px;
  border-collapse: collapse;
  th, td {
  padding: 8px;
  border: 1px solid $black;
  text-align: left;
}//th,td
}//table
}//.tabs > input:nth-child(3):checked ~ .tab-content
.bottom { 
 grid-area: 7 / 1 / 8 / 3;
position:absolute;
  width:100%;
height:3vw;
  bottom:0;
  background:white;
  border-top:0.5px dashed $white;
  font-weight:200;
  line-height:2.3;
  z-index:3;
  span{
    padding:0.8vw 5vw 0.8vw 1.5vw;
    &:first-of-type{
    border-right:0.5px dashed $white;
  }
}
}//.bottom
dl.references { 
grid-area: 1 / 2 / 8 / 3; 
 writing-mode: vertical-rl;
  @include transform(rotate(180deg));
  width:3vw;
  height:60vw;
  position:absolute;
  right:0;
  bottom:0;
  border-right:0.5px dashed $white;
  background:$black;
  padding: calc(3vw - 0.2px) 0 0 0;
  line-height:2;
  display:flex;
  margin: 0;
  z-index:3;
  dt{
    border-top:0.5px dashed $white;
    margin:0 0 1vw 0;
    padding-top:2vw;
  }
  dd{
    margin:0 0 1.5vw 0;
    &:first-of-type{
      padding:0 0 1.5vw 0;
    }
    a{
      color:$white;
      text-decoration-style: dotted;
      text-decoration-thickness: 1px;
      &:hover{
        text-decoration-style: solid;
        font-style:italic;
      }
    }
  }
}

        &:nth-child(1){ //co2 emissions

   .tabs > input:nth-child(1):checked ~ .tab-content{  
  display: block;
  table{
    &:hover {
      tr {
        opacity: 0; // On hover, make all rows visible

        // Generate animations for the remaining children with staggered delays
        @for $i from 3 through 35 {
          &:nth-child(#{$i}) {
            animation: fadeInOut #{$animation-duration} ease-out #{0.45s * ($i - 1)};
          }
        }

        // Apply fadeIn animation to the last child
        &:last-child {
          animation: fadeIn #{$animation-duration} ease-in-out #{0.45s * (35 - 1)};
          animation-fill-mode: both; // Keeps the last keyframe styles after animation ends
        }
      }
    }
     tr{
            // Ensure the first child is visible from the start
      &:nth-child(2) {
        opacity: 1;
        animation: none; // Disable animation for the first child
        .extent-bar{
          background:$black;
          span{
            color:$white;
          }//span
        }//.extent-bar
      }//&:nth-child(2)
      // Last child circle is visible from the start
      &:last-child {
       opacity: 1;
      }
      .extent-bar {
      position: absolute;
      border: 1px solid $white;
      background:$black;
        width: calc(var(--value) * 0.5);
padding-bottom: calc(var(--value) * 0.5);
        top:calc(var(--value) * 0.7);
        left:50%;
       span{
            position:absolute;
             bottom: 0;
            left: 50%;
         opacity:0;
        }
    }//.extent-bar 
    } //tr
  }//table

}//.tabs > input:nth-child(1):checked ~ .tab-content
  }//&:nth-child(3)
  
    &:nth-child(2){ //temperature rise
    .tabs > input:nth-child(1):checked ~ .tab-content{  
/* styling content of tab 3 */
  display: block;
  table{
        &:before{
  position: absolute;
content: "";
border-left: 1px solid $white;
width: 5vw;
height: 30vw;
top: 1vw;
left:50%;
    }//before
        &:hover {
      tr {
        opacity: 0; // On hover, make all rows visible

        // Generate animations for the remaining children with staggered delays
        @for $i from 3 through 64 {
          &:nth-child(#{$i}) {
            animation: fadeInOut #{$animation-duration} ease-out #{0.45s * ($i - 1)};
          }
        }

        // Apply fadeIn animation to the last child
        &:last-child {
          animation: fadeIn #{$animation-duration} ease-in-out #{0.45s * (64 - 1)};
          animation-fill-mode: both; // Keeps the last keyframe styles after animation ends
        }
      }
    }
     tr{
            // Ensure the first child is visible from the start
      &:nth-child(2) {
        opacity: 1;
        animation: none; // Disable animation for the first child
        .extent-bar {
        background:$black;
        }
      }//&:nth-child(2)
      // Last child circle is visible from the start
      &:last-child {
       opacity: 1;
      }
      .extent-bar {
      width:2vw;
      top: calc(var(--value) * -2.7 + 29vw);
      left:50%;
        border-radius:50%;
        background:$white;
    }//.extent-bar 
    } //tr
  }//table

}//.tabs > input:nth-child(1):checked ~ .tab-content
  }//&:nth-child(2)  

  &:nth-child(3){ //sea ice loss
   .tabs > input:nth-child(1):checked ~ .tab-content{  
/* styling content of tab 3 */
  display: block;
  table{
         &:hover {
      tr {
        opacity: 0; // On hover, make all rows visible

        // Generate animations for the remaining children with staggered delays
        @for $i from 3 through 43 {
          &:nth-child(#{$i}) {
            animation: fadeInOut #{$animation-duration} ease-out #{0.45s * ($i - 1)};
          }
        }

        // Apply fadeIn animation to the last child
        &:last-child {
          animation: fadeIn #{$animation-duration} ease-in-out #{0.45s * (43 - 1)};
          animation-fill-mode: both; // Keeps the last keyframe styles after animation ends
        }
      }
    }
     tr{
  
      &:nth-child(2) {
        opacity: 1;
        animation: none; // Disable animation for the first child
        .extent-bar{
          background:transparent;
          left:50%;
          span{
            color:$white;
          }//span
        }//.extent-bar
      }//&:nth-child(2)
      // Last child circle is visible from the start
      &:last-child {
       opacity: 1;
      }
      .extent-bar {
      position: absolute;
      top: 1vw;
      left: 50%;
      @include transform(translate(-50%, 0));
      border: 1px solid black;
      border-radius:50%;
      background:$white;
      width:calc(var(--value) * 0.8);
      padding-bottom:calc(var(--value) * 0.8);
      z-index:1;
    }//.extent-bar 
    } //tr
  }//table

}//.tabs > input:nth-child(1):checked ~ .tab-content

  }// &:nth-child(2) card{
  
  &:nth-child(4){ //sea level rise
    .tabs > input:nth-child(1):checked ~ .tab-content{  
/* styling content of tab 3 */
  display: block;
  table{
    &:before{
  position: absolute;
content: "";
border-left: 1px solid $black;
width: 5vw;
height: 34vw;
top: -1vw;
@include transform(translate(12vw,0));
    }
    &:hover {
      tr {
        opacity: 0; // On hover, make all rows visible

        // Generate animations for the remaining children with staggered delays
        @for $i from 3 through 30 {
          &:nth-child(#{$i}) {
            animation: fadeInOut #{$animation-duration} ease-out #{0.45s * ($i - 1)};
          }
        }

        // Apply fadeIn animation to the last child
        &:last-child {
          animation: fadeIn #{$animation-duration} ease-in-out #{0.45s * (30 - 1)};
          animation-fill-mode: both; // Keeps the last keyframe styles after animation ends
        }
      }
    }
     tr{
            // Ensure the first child is visible from the start
      &:nth-child(2) {
        opacity: 1;
        animation: none; // Disable animation for the first child
        .extent-bar {
          background:$black;
}
      }//&:nth-child(2)
      // Last child circle is visible from the start
      &:last-child {
       opacity: 1;
      }
      .extent-bar {
       width:20vw;
      padding-bottom:0.5vw;
      top: calc(var(--value) * -5.9 + 30vw);
        background:$white;
        left: 50%;
       span{
       position:absolute;
             bottom: 0;
            left: 50%;
         opacity:0;
        }
    }//.extent-bar 
    } //tr
  }//table

}//.tabs > input:nth-child(1):checked ~ .tab-content
  }//&:nth-child(1)
}//.card

footer{
  border-top: 1px solid $white;
  margin:0 auto;
  text-align: center;
  padding:20px 0 0 0;
  a{
    color:$white;
    text-decoration: none;
    cursor: pointer;
    &:hover{
      text-decoration: underline;
      opacity: 0.7;
    }
  }
}

@media (max-width: 1200px) {
  .card{
        &:nth-child(2){ //temperature rise
    .tabs > input:nth-child(1):checked ~ .tab-content{ 
        table{
          tr{
      .extent-bar {
               top: calc(var(--value) * -1.3 + 29vw);
      }
          }
      }
      
      }
  }//&:nth-child(2)
    
    &:nth-child(4){ //sea level rise
    .tabs > input:nth-child(1):checked ~ .tab-content{ 
        table{
              &:before{
height: 32vw;
top: -1vw;
    }
          tr{
      .extent-bar {
         top: calc(var(--value) * -2.7 + 28vw);
      }
          }
      }
      
      }
  }//&:nth-child(4)
  }//.card
  
}


@media (max-width: 600px) {
  .card-wrapper{
    display:block;
    .card{
      font-size:16px;
      height:130vw;
      margin:40px 20px;
      h2{
        font-size:28px;
        padding: 11vw 1vw 0 3vw;
      }
      p{
        font-size:16px;
        padding: 8px 38px 10px 3vw;
      }
      .tabs{
        font-size:16px;
        .tab-content {
          table{
          margin: 30px 20px 30px 20px;
            width: calc(100% - 33px);
        }//table
        }//.tab-content

      }//tabs
      .tabs > input:nth-child(1):checked ~ .tab-content {
  display: block;

  table {
    width: calc(100% - 33px);
    tr {
      &:nth-child(2){
              .year{
                top:-16px;
      }
      }
      .year{
        font-size:12px;
        &:before{
          width:10px;
          height:10px;
          margin-top: 2px;
          margin-left:-16px;
        }
      }
    }//tr
        }//table
      }//.tabs > input:nth-child(1):checked ~ .tab-content
    .tab-label{
          height: 27px;
      padding: 13px 0 1vw 3vw;
      label{
        margin: 0 24px 0 0;
        &:before{
        content: "";
width: 20px;
height: 20px;
display: inline-block;
margin-right: 10px;
margin-bottom: -0.2vw;
border: 1px dashed $white
      }
      }
        }
      dl.references {
        height:130vw;
        width:34px;
        padding-top: 33px;
      }
      .bottom{
        height:33px;
      }
      
        &:nth-child(2){ //temperature rise
    .tabs > input:nth-child(1):checked ~ .tab-content{ 
        table{
          &:before{
            height:60vw;
          }
          tr{
      .extent-bar {
               top: calc(var(--value) * -2 + 63vw);
      }
          }
      }
      
      }
  }//&:nth-child(2)
    
    &:nth-child(4){ //sea level rise
    .tabs > input:nth-child(1):checked ~ .tab-content{ 
        table{
              &:before{
height: 60vw;
top: 0;
    }
          tr{
      .extent-bar {
        width:40vw;
        left:30vw;
         top: calc(var(--value) * -3.5 + 55vw);
      }
          }
      }
      
      }
  }//&:nth-child(4)
 
  
      
      
      
    }//.card
  }
}




